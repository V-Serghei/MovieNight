<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.Http.Extensions</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.Http.FormFileExtensions">
            <summary>
            Extension methods for <see cref="T:Microsoft.AspNet.Http.IFormFile"/>.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Http.FormFileExtensions.SaveAs(Microsoft.AspNet.Http.IFormFile,System.String)">
            <summary>
            Saves the contents of an uploaded file.
            </summary>
            <param name="formFile">The <see cref="T:Microsoft.AspNet.Http.IFormFile"/>.</param>
            <param name="filename">The name of the file to create.</param>
        </member>
        <member name="M:Microsoft.AspNet.Http.FormFileExtensions.SaveAsAsync(Microsoft.AspNet.Http.IFormFile,System.String,System.Threading.CancellationToken)">
            <summary>
            Asynchronously saves the contents of an uploaded file.
            </summary>
            <param name="formFile">The <see cref="T:Microsoft.AspNet.Http.IFormFile"/>.</param>
            <param name="filename">The name of the file to create.</param>
        </member>
        <member name="M:Microsoft.AspNet.Http.HeaderDictionaryExtensions.Append(Microsoft.AspNet.Http.IHeaderDictionary,System.String,Microsoft.Extensions.Primitives.StringValues)">
            <summary>
            Add new values. Each item remains a separate array entry.
            </summary>
            <param name="key">The header name.</param>
            <param name="value">The header value.</param>
        </member>
        <member name="M:Microsoft.AspNet.Http.HeaderDictionaryExtensions.AppendCommaSeparatedValues(Microsoft.AspNet.Http.IHeaderDictionary,System.String,System.String[])">
            <summary>
            Quotes any values containing comas, and then coma joins all of the values with any existing values.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="M:Microsoft.AspNet.Http.HeaderDictionaryExtensions.GetCommaSeparatedValues(Microsoft.AspNet.Http.IHeaderDictionary,System.String)">
            <summary>
            Get the associated values from the collection separated into individual values.
            Quoted values will not be split, and the quotes will be removed.
            </summary>
            <param name="key">The header name.</param>
            <returns>the associated values from the collection separated into individual values, or StringValues.Empty if the key is not present.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.HeaderDictionaryExtensions.SetCommaSeparatedValues(Microsoft.AspNet.Http.IHeaderDictionary,System.String,System.String[])">
            <summary>
            Quotes any values containing comas, and then coma joins all of the values.
            </summary>
            <param name="key">The header name.</param>
            <param name="values">The header values.</param>
        </member>
        <member name="T:Microsoft.AspNet.Http.Extensions.UriHelper">
            <summary>
            A helper class for constructing encoded Uris for use in headers and other Uris.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Http.Extensions.UriHelper.Encode(Microsoft.AspNet.Http.PathString,Microsoft.AspNet.Http.PathString,Microsoft.AspNet.Http.QueryString,Microsoft.AspNet.Http.FragmentString)">
            <summary>
            Combines the given URI components into a string that is properly encoded for use in HTTP headers.
            </summary>
            <param name="pathBase"></param>
            <param name="path"></param>
            <param name="query"></param>
            <param name="fragment"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Extensions.UriHelper.Encode(System.String,Microsoft.AspNet.Http.HostString,Microsoft.AspNet.Http.PathString,Microsoft.AspNet.Http.PathString,Microsoft.AspNet.Http.QueryString,Microsoft.AspNet.Http.FragmentString)">
            <summary>
            Combines the given URI components into a string that is properly encoded for use in HTTP headers.
            Note that unicode in the HostString will be encoded as punycode.
            </summary>
            <param name="scheme"></param>
            <param name="host"></param>
            <param name="pathBase"></param>
            <param name="path"></param>
            <param name="query"></param>
            <param name="fragment"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Extensions.UriHelper.Encode(System.Uri)">
            <summary>
            Generates a string from the given absolute or relative Uri that is appropriately encoded for use in
            HTTP headers. Note that a unicode host name will be encoded as punycode.
            </summary>
            <param name="uri"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Extensions.UriHelper.GetEncodedUrl(Microsoft.AspNet.Http.HttpRequest)">
            <summary>
            Returns the combined components of the request URL in a fully escaped form suitable for use in HTTP headers
            and other HTTP operations.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.Extensions.UriHelper.GetDisplayUrl(Microsoft.AspNet.Http.HttpRequest)">
            <summary>
            Returns the combined components of the request URL in a fully un-escaped form (except for the QueryString)
            suitable only for display. This format should not be used in HTTP headers or other HTTP operations.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="P:Microsoft.AspNet.Http.Extensions.Resources.Exception_SendFileNotSupported">
            <summary>
            This server does not support the sendfile.SendAsync extension.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Http.Extensions.Resources.FormatException_SendFileNotSupported">
            <summary>
            This server does not support the sendfile.SendAsync extension.
            </summary>
        </member>
        <member name="T:Microsoft.AspNet.Http.SendFileResponseExtensions">
            <summary>
            Provides extensions for HttpResponse exposing the SendFile extension.
            </summary>
        </member>
        <member name="M:Microsoft.AspNet.Http.SendFileResponseExtensions.SupportsSendFile(Microsoft.AspNet.Http.HttpResponse)">
            <summary>
            Checks if the SendFile extension is supported.
            </summary>
            <param name="response"></param>
            <returns>True if sendfile feature exists in the response.</returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.SendFileResponseExtensions.SendFileAsync(Microsoft.AspNet.Http.HttpResponse,System.String)">
            <summary>
            Sends the given file using the SendFile extension.
            </summary>
            <param name="response"></param>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.AspNet.Http.SendFileResponseExtensions.SendFileAsync(Microsoft.AspNet.Http.HttpResponse,System.String,System.Int64,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Sends the given file using the SendFile extension.
            </summary>
            <param name="response"></param>
            <param name="fileName">The full or relative path to the file.</param>
            <param name="offset">The offset in the file.</param>
            <param name="count">The number of types to send, or null to send the remainder of the file.</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
    </members>
</doc>
