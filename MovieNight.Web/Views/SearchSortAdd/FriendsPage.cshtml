@using System.Activities.Expressions
@using MovieNight.Web.Models.Friends
@model MovieNight.Web.Models.Friends.FriendListModel

@{
ViewBag.Title = "FriendsPage";
}


<div>
    <div class="content">

        <!-- Start Content-->
        <div class="container-fluid">

            <!-- start page title -->
            <div class="row">
                <div class="col-12">
                    <div class="page-title-box">
                        <div class="page-title-right">
                            <ol class="breadcrumb m-0">
                                <li class="breadcrumb-item"><a href="javascript: void(0);">MovieNight</a></li>
                                <li class="breadcrumb-item"><a href="javascript: void(0);">Friends</a></li>
                            </ol>
                        </div>
                        <h4 class="page-title text-warning font-weight-bold">My friends</h4>
                    </div>
                </div>
            </div>
            <!-- end page title -->

            <div class="row">
                <div class="col-12">
                    <div class="card-box">
                        <div class="row">
                            <div class="col-lg-8">
                                <form class="form-inline">
                                    <div class="form-group">
                                        <label for="searchInput" class="sr-only">Search</label>
                                        <input type="search" class="form-control" id="searchInput" placeholder="Search..." oninput="filterFriends()">
                                    </div>
                                    <div class="form-group mx-sm-3">
                                    </div>
                                </form>
                            </div>
                            @* <div class="col-lg-8"> *@
                            @*     <form class="form-inline"> *@
                            @*         <div class="form-group"> *@
                            @*             <label for="inputPassword2" class="sr-only">Search</label> *@
                            @*             <input type="search" class="form-control" id="inputPassword2" placeholder="Search..."> *@
                            @*         </div> *@
                            @*         <div class="form-group mx-sm-3"> *@
                            @*         </div> *@
                            @*     </form> *@
                            @* </div> *@
                            <div class="col-lg-4">
                                <div class="text-lg-right mt-3 mt-lg-0">
                                    <a href="@Url.Action("FindFriends", "SearchSortAdd", new { _skipParametr = 0 })">
                                        <button type="button" class="btn btn-outline-primary waves-effect waves-light">
                                            <i class="mdi mdi-plus-circle mr-1"></i>
                                            Add friend
                                        </button>
                                    </a>
                                </div>
                            </div><!-- end col-->
                        </div> <!-- end row -->
                    </div> <!-- end card-box -->
                </div><!-- end col-->
            </div>
            <!-- end row -->

            @{
            for (int i = 0; i < Model.ListOfFriends.Count; i++)
            {
            var person = Model.ListOfFriends[i];
            <div class="row">
                <div class="col-lg-4">
                    <div class="text-center card-box ribbon-box">
                        <div class="clearfix"></div>
                        <div class="pt-2 pb-2">
                            @if(person.BUserE.Avatar!=null)
                            {
                            <img src=@Url.Content(person.BUserE.Avatar) class="rounded-circle img-thumbnail avatar-xl" alt="profile-image">
                            }
                            else
                            {
                            <img src="~/images/users/default_avatar.png" class="rounded-circle img-thumbnail avatar-xl" alt="profile-image">
                            }
                            <h4 class="mt-3 font-17"><a href="extras-profile.html" class="text-dark">@person.BUserE.Username</a></h4>
                            <p> <span> <a href="#" class="text-pink">@person.BUserE.Email</a> </span></p>

                            @if (person.Quote != null)
                            {
                            <p class="text-muted font-13 mb-3">
                                @person.Quote
                            </p>
                            }

                            <form action=@Url.Action("Compose", "DataTransfer") method="get">
                                <button type="submit" class="btn btn-primary btn-sm waves-effect waves-light" name="id" value="@person.BUserE.Id">
                                    <i class="mdi mdi-email mr-1"></i> Message
                                </button>
                            </form>
                            <form action=@Url.Action("SetDeleteFriendPage", "SearchSortAdd") method="get">
                                <button type="submit" class="btn btn-outline-warning btn-sm waves-effect" name="_friendId" value="@person.BUserE.Id">
                                    <i class="fe-x-circle"></i> Unfriend
                                </button>
                            </form>
                            <a href=@Url.Action("UserTemplatePage", "InformationSynchronization", new{id=person.BUserE.Id})>
                                <button type="button" class="btn btn-outline-warning btn-sm waves-effect">
                                    <i class="remixicon-account-pin-box-fill"></i> Go to profile
                                </button>
                            </a>

                        </div> <!-- end .padding -->
                    </div> <!-- end card-box-->
                </div> <!-- end col -->

                @if (i + 1 < Model.ListOfFriends.Count)
                {
                var nextPerson = Model.ListOfFriends[i + 1];
                i++;
                <div class="col-lg-4">
                    <div class="text-center card-box ribbon-box">
                        <div class="clearfix"></div>
                        <div class="pt-2 pb-2">
                            @if(nextPerson.BUserE.Avatar != null)
                            {
                            <img src=@Url.Content(nextPerson.BUserE.Avatar) class="rounded-circle img-thumbnail avatar-xl" alt="profile-image">
                            }
                            else
                            {
                            <img src="~/images/users/default_avatar.png" class="rounded-circle img-thumbnail avatar-xl" alt="profile-image">
                            }
                            <h4 class="mt-3 font-17"><a href="extras-profile.html" class="text-dark">@nextPerson.BUserE.Username</a></h4>
                            <p> <span> <a href="#" class="text-pink">@nextPerson.BUserE.Email</a> </span></p>

                            @if (nextPerson.Quote != null)
                            {
                            <p class="text-muted font-13 mb-3">
                                @nextPerson.Quote
                            </p>
                            }

                            <form action=@Url.Action("Compose", "DataTransfer") method="get">
                                <button type="submit" class="btn btn-primary btn-sm waves-effect waves-light" name="id" value="@nextPerson.BUserE.Id">
                                    <i class="mdi mdi-email mr-1"></i> Message
                                </button>
                            </form>
                            <form action=@Url.Action("SetDeleteFriendPage", "SearchSortAdd") method="get">
                                <button type="submit" class="btn btn-outline-warning btn-sm waves-effect" name="_friendId" value="@nextPerson.BUserE.Id">
                                    <i class="fe-x-circle"></i> Unfriend
                                </button>
                            </form>
                            <a href=@Url.Action("UserTemplatePage", "InformationSynchronization", new{id=nextPerson.BUserE.Id})>
                                <button type="button" class="btn btn-outline-warning btn-sm waves-effect">
                                    <i class="remixicon-account-pin-box-fill"></i> Go to profile
                                </button>
                            </a>

                        </div> <!-- end .padding -->
                    </div> <!-- end card-box-->
                </div> <!-- end col -->
                }

                @if (i + 1 < Model.ListOfFriends.Count)
                {
                var nextnextPerson = Model.ListOfFriends[i + 1];
                i++;
                <div class="col-lg-4">
                    <div class="text-center card-box ribbon-box">
                        <div class="clearfix"></div>
                        <div class="pt-2 pb-2">
                            @if(nextnextPerson.BUserE.Avatar!=null)
                            {
                            <img src=@Url.Content(nextnextPerson.BUserE.Avatar) class="rounded-circle img-thumbnail avatar-xl" alt="profile-image">
                            }
                            else
                            {
                            <img src="~/images/users/default_avatar.png" class="rounded-circle img-thumbnail avatar-xl" alt="profile-image">
                            }
                            <h4 class="mt-3 font-17"><a href="extras-profile.html" class="text-dark">@nextnextPerson.BUserE.Username</a></h4>
                            <p> <span> <a href="#" class="text-pink">@nextnextPerson.BUserE.Email</a> </span></p>

                            @if(nextnextPerson.Quote !=null)
                            {<p class ="text-muted font-13 mb-3" >
                                @nextnextPerson.Quote
                            </p>
                            }

                            <form action=@Url.Action("Compose", "DataTransfer") method="get">
                                <button type="submit" class="btn btn-primary btn-sm waves-effect waves-light" name="id" value="@nextnextPerson.BUserE.Id">
                                    <i class="mdi mdi-email mr-1"></i> Message
                                </button>
                            </form>
                            <form action=@Url.Action("SetDeleteFriendPage", "SearchSortAdd") method="get">
                                <button type="submit" class="btn btn-outline-warning btn-sm waves-effect" name="_friendId" value="@nextnextPerson.BUserE.Id">
                                    <i class="fe-x-circle"></i> Unfriend
                                </button>
                            </form>
                            <a href=@Url.Action("UserTemplatePage", "InformationSynchronization", new{id=nextnextPerson.BUserE.Id})>
                                <button type="button" class="btn btn-outline-warning btn-sm waves-effect">
                                    <i class="remixicon-account-pin-box-fill"></i> Go to profile
                                </button>
                            </a>

                        </div> <!-- end .padding -->
                    </div> <!-- end card-box-->
                </div> <!-- end col -->
                }

            </div>
            <!-- end row -->
            }
            }


            <div class="row">
                <div class="col-12">
                    <div class="text-right">
                        <ul class="pagination pagination-rounded justify-content-end" id="paginationList">
                            <!-- Здесь будет генерироваться список пагинации -->
                        </ul>
                    </div>
                </div>
            </div>

            <script>
                // Функция для загрузки страницы с указанным _skipParametr
                function loadPage(skipParam) {
                    var url = '@Url.Action("FriendsPage", "SearchSortAdd")';
                    url += '?_skipParametr=' + skipParam;
                    window.location.href = url;
                }

                // Генерация списка пагинации
                function generatePagination(totalPages, currentPage, itemsPerPage) {
                    var paginationList = $('#paginationList');
                    paginationList.empty();

                    // Добавление кнопок для каждой страницы
                    for (var i = 1; i <= totalPages; i++) {
                        var liClass = (i === currentPage) ? 'page-item active' : 'page-item';
                        var pageLink = $('<a>', {
                            class: 'page-link',
                            href: 'javascript:void(0);',
                            text: i,
                            click: function () {
                                var skipParam = (i - 1) * itemsPerPage;
                                loadPage(skipParam);
                            }
                        });
                        var listItem = $('<li>', { class: liClass }).append(pageLink);
                        paginationList.append(listItem);
                    }
                }

                // Вызов функции генерации пагинации при загрузке страницы
                $(document).ready(function () {
                    // Здесь установите значения totalPages, currentPage и itemsPerPage из вашей модели или контроллера
                    var totalPages = 5; // Общее количество страниц
                    var currentPage = 1; // Текущая страница
                    var itemsPerPage = 10; // Количество элементов на странице

                    generatePagination(totalPages, currentPage, itemsPerPage);
                });
            </script>
            <!-- end row -->


        </div> <!-- container -->

    </div> <!-- content -->


</div>

